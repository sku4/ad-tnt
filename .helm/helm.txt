---
# Source: alice-checklist/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alice-checklist
  labels:
    helm.sh/chart: alice-checklist-1.0.0
    app.kubernetes.io/name: alice-checklist
    app.kubernetes.io/instance: alice-checklist
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: alice-checklist/templates/storageclass.yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: boltdb-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
# Source: alice-checklist/templates/pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: boltdb
spec:
  capacity:
    storage: 5Mi
  # volumeMode field requires BlockVolume Alpha feature gate to be enabled
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: boltdb-storage
  local:
    path: /home/skubach/alice-checklist/db
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - node1.internal
---
# Source: alice-checklist/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: boltdb
spec:
  storageClassName: boltdb-storage
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Mi
---
# Source: alice-checklist/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: alice-checklist
  labels:
    helm.sh/chart: alice-checklist-1.0.0
    app.kubernetes.io/name: alice-checklist
    app.kubernetes.io/instance: alice-checklist
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: alice-checklist
    app.kubernetes.io/instance: alice-checklist
---
# Source: alice-checklist/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alice-checklist
  labels:
    helm.sh/chart: alice-checklist-1.0.0
    app.kubernetes.io/name: alice-checklist
    app.kubernetes.io/instance: alice-checklist
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: alice-checklist
      app.kubernetes.io/instance: alice-checklist
  template:
    metadata:
      labels:
        helm.sh/chart: alice-checklist-1.0.0
        app.kubernetes.io/name: alice-checklist
        app.kubernetes.io/instance: alice-checklist
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
        app: alice-checklist
    spec:
      imagePullSecrets:
        - name: regcred
      serviceAccountName: alice-checklist
      containers:
        - name: alice-checklist
          image: "alice-checklist:1.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - mountPath: /root/db
              name: db
            - mountPath: /root/configs/googlekeep
              name: googlekeep
      volumes:
        - name: googlekeep
          secret:
            secretName: googlekeep
        - name: db
          persistentVolumeClaim:
            claimName: boltdb
---
# Source: alice-checklist/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alice-checklist
  labels:
    helm.sh/chart: alice-checklist-1.0.0
    app.kubernetes.io/name: alice-checklist
    app.kubernetes.io/instance: alice-checklist
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "alice.gohome.run"
      secretName: alice-gohome-run-tls
  rules:
    - host: "alice.gohome.run"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: alice-checklist
                port:
                  number: 80
---
# Source: alice-checklist/templates/clusterissuer.yaml
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt
  namespace: kube-system
spec:
  acme:
    # The ACME server URL
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: skubach@tut.by
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt
    # Enable the HTTP-01 challenge provider
    solvers:
      - http01:
          ingress:
            ingressClassName: nginx
